version: '3.7'

networks:
  statamic:

volumes:
    mongo-data:
    mysql-data:

# Laravel foundation config
x-laravel: &laravel-base
  env_file:
    - .env.example
    - .env
    - .docker/php/docker.env
  volumes:
    - ./:/var/www/statamic
  depends_on:
    - mail
  networks:
    - statamic


services:
  # Application and webserver
  php:
    << : *laravel-base
    image: docker.pkg.github.com/autosiero/docker-statamic/laravel-apache
    build:
      context: .docker/php
      target: laravel
    ports:
      - 127.0.0.1:8080:80
      - 127.0.0.1:8081:9000

  # Horizon
  horizon:
    << : *laravel-base
    image: docker.pkg.github.com/autosiero/docker-statamic/laravel-horizon
    build:
      context: .docker/php
      target: horizon

  # MySQL database
  mysql:
    image: docker.pkg.github.com/autosiero/docker-statamic/mysql
    build:
      context: .docker/mysql
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: laravel
      MYSQL_ONETIME_PASSWORD: 'true'
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    ports:
      - 3306:3306
    networks:
      - statamic

  # PhpMyAdmin
  pma:
    image: docker.pkg.github.com/autosiero/docker-statamic/phpmyadmin
    build:
      context: .docker/phpmyadmin
    networks:
      - statamic
    environment:
      PMA_HOST: mysql
      PMA_USER: phpmyadmin
      PMA_PASSWORD: phpmyadmin
    depends_on:
      - mysql

  # Mongo DB
  mongodb:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoroot
      MONGO_INITDB_ROOT_PASSWORD: mongoroot
    volumes:
      - ./.docker/mongodb:/docker-entrypoint-initdb.d
      - mongo-data:/data/db
    networks:
      - statamic

  # Mongo monitor
  mongo-express:
    image: mongo-express
    networks:
      - statamic
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongoroot
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongoroot
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_SITE_BASEURL: /mongo-express/

  # Mailhog (to test e-mail)
  mail:
    image: mailhog/mailhog:latest
    networks:
      - statamic

  # Redis (cache)
  redis:
    image: redis
    networks:
      - statamic
